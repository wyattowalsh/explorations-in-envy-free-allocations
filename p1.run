# This is the run file for problem 1 

# reset everything to start fresh
reset; 

# start the log file
# option log_file 'p1.txt';

# declare set for which files are going to be read and parameters to hold variables of interest
set files = 1 .. 210;
# param pMinColl {files};
# param solveTimeColl {files};
# param numObjectsColl {files};
# param numPeopleColl {files};
# param filePaths {files};

# write header to file
print 'p, solveTime, numObjects, numPeople, fileNumber' >  ('./data/output/full.txt');

# model 
model p1.mod;

# declare .dat file for simple problem 
# data "p1_simple.dat";

# # Update log to reflect which data is currently being used.
# printf('File: p1_simple.dat begins here: \n') >>  'p1.txt';
# #
# solve;
# display {j in 1.._nvars, k in 1.._nobjs} (_varname[j], _var[j], _objname[k], _obj[k]); > 'p1_larger.'  
# display _total_solve_time;
# reset data; #people, objects, numObjects, numPeople, v;

# data "p1_larger.dat";
# printf('File: p1_larger.dat begins here: \n') >>  'p1.txt';
# solve;
# display {j in 1.._nvars} (_varname[j], _var[j]);  
# display {k in 1.._nobjs} (_objname[k], _obj[k]);
# display _total_solve_time;
# reset data; #people, objects, numObjects, numPeople, v;

for {i in files} {
	data ("./data/generated/" & i & ".dat");
	# print("File: " & i & " begins here:") >>  'p1.txt';
	solve;
	print pMin & ', ' & _total_solve_time & ', ' & numObjects & ', ' & numPeople & ', ' & i >>  ('./data/output/full.txt');
	# let pMinColl[i]:=  pMin;
	# let solveTimeColl[i] := _total_solve_time;
	# let numPeopleColl[i] :=  numPeople;
	# let numObjectsColl[i] := numObjects;
	reset data;
}

# display {i in files} (pMinColl[i], solveTimeColl[i], numPeopleColl[i], numObjectsColl[i]);  >>  ('./data/output/full.txt');
# display {k in 1.._nobjs} (_objname[k], _obj[k]);
# display _total_solve_time;
# option log_file '';
reset;

# option log_file 'p1_.txt';

# model p1.mod;
# data './data/generated/1.dat';
# solve;

# display _varname, _var;

# reset; 

# model p1.mod;

# data p1_larger.dat;

# solve;



# display {i in 1} (_var[i], _total_solve_time, numObjects, numPeople) ;#  >>  ('./data/output/1.txt');
# display {j in 1.._nobjs} (_objname[j], _obj[j]);# >  ('./data/output/1.txt')
# display _total_solve_time;# >  ('/data/output/1.txt')