# This is the run file for problem 1 

# reset everything to start fresh
reset; 

option show_stats 0;
option display_1col 0; 
option solver_msg 1;
# declare set for which files are going to be read and parameters to hold variables of interest
set F = 1 .. 262;
param status binary;
model 1.mod;

data "./data/simple.dat"; 

solve;

if match(solve_message, "infeasible") > 0 then { 
		let status := 0;
	} else {
		let status := 1;
}

display status > ('./data/output/1_simple.txt');
display {p in P, i in I} precision(x[p,i],5) >>  ('./data/output/1_simple.txt');
display {p in P} precision(setValue[p],5)  >>  ('./data/output/1_simple.txt');
display {p in P} precision(setValueSelf[p],5)  >>  ('./data/output/1_simple.txt');
display {p in P} precision(pEnvyFree[p],5) >>  ('./data/output/1_simple.txt');
display z >> ('./data/output/1_simple.txt');

reset data;

data "./data/larger.dat";

solve;

if match(solve_message, "infeasible") > 0 then { 
		let status := 0;
	} else {
		let status := 1;
}

display status > ('./data/output/1_larger.txt');
display {p in P, i in I} precision(x[p,i],5) >>  ('./data/output/1_larger.txt');
display {p in P} precision(setValue[p],5)  >>  ('./data/output/1_larger.txt');
display {p in P} precision(setValueSelf[p],5)  >>  ('./data/output/1_larger.txt');
display {p in P} precision(pEnvyFree[p],5) >>  ('./data/output/1_larger.txt');
display z >> ('./data/output/1_larger.txt');

reset data; 
# write header to file
print 'pEnvyFree, solveTime, |P|, |I|, fileNumber' >  ('./data/output/1.txt');

for {f in F} {
	data ("./data/generated/" & f & ".dat");
	solve;
	if (match(solve_message, "infeasible") > 0) then { 
		print f & ' is infeasible';
		print 'NaN' &  ', ' & precision(_solve_time,5) & 
		', ' & (card(P)) & ', ' & (card(I)) & ', ' & f >> ('./data/output/1.txt');
		reset data;
		continue;
	}
	print precision(z,5) & ', ' & precision(_solve_time,5) & 
		', ' & (card(P)) & ', ' & (card(I)) & ', ' & f >>  ('./data/output/1.txt');
	reset data;
}

option show_stats 0;
option display_1col 0; 
option solver_msg 1;

