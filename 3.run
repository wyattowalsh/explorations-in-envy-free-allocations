# This is the run file for problem 1 

# reset everything to start fresh
reset; 

option show_stats 0;
option display_1col 0; 
option solver_msg -1;
# declare set for which files are going to be read and parameters to hold variables of interest
set F = 1 .. 250;
set cashCount = 1 .. 100;
var status binary;
model 3.mod;

data "./data/simple_cash.dat"; 

solve;

if match(solve_message, "infeasible") > 0 then { 
		fix status := 0;
	} else {
		fix status := 1;
}

display status > ('./data/output/3_simple.txt');
display {p in P, i in I} precision(x[p,i],5) >>  ('./data/output/3_simple.txt');
display {p in P} precision(cashProportion[p],5) >>  ('./data/output/3_simple.txt');
display {p1 in P, p2 in P} precision(setValue[p1,p2],5)  >>  ('./data/output/3_simple.txt');
display {p1 in P, p2 in P} precision(pEnvyFree[p1,p2],5) >>  ('./data/output/3_simple.txt');
display z >> ('./data/output/3_simple.txt');

reset data;

# data "./data/larger.dat";

# solve;

# if match(solve_message, "infeasible") > 0 then { 
# 		fix status := 0;
# 	} else {
# 		fix status := 1;
# }

# display status > ('./data/output/3_larger.txt');
# display {p in P, i in I} precision(x[p,i],5) >>  ('./data/output/3_larger.txt');
# display {p1 in P, p2 in P} precision(setValue[p1,p2],5)  >>  ('./data/output/3_larger.txt');
# display {p1 in P, p2 in P} precision(pEnvyFree[p1,p2],5) >>  ('./data/output/3_larger.txt');
# display z >> ('./data/output/3_larger.txt');
# reset data; 
# # write header to file
print 'pEnvyFree, solveTime, |I|, |P|, fileNumber' >  ('./data/output/3.txt');

for {f in F} {
	data ("./data/generated/" & f & ".dat");
	data ("./data/generated/cash.dat");
	for {c in cashCount} {
		fix cash := C[c];
		# print("File: " & i & " begins here:") >>  '1.txt';
		solve;
		if match(solve_message, "infeasible") > 0 or _solve_time > 150 then { 
			print f & ' is infeasible';
			print 'NaN' &  ', ' & precision(_solve_time,5) & 
			', ' & (card(I)) & ', ' & (card(P)) & ', ' & f >> ('./data/output/3.txt');
			reset data;
			break;
			continue;
		}
		print precision(z,5) & ', ' & precision(_solve_time,5) & 
			', ' & (card(I)) & ', ' & (card(P)) & ', ' & f >>  ('./data/output/3.txt');
		reset data;
	}
}

option show_stats 0;
option display_1col 0; 
option solver_msg 0;

